---
image: alpine:latest

stages:
  - build
  - upload
  - deploy

variables:
  ARTIFACTORY_REPO: "https://repo.cdek.ru/artifactory/erp-cms"


build_tag:
  image: php:7.4-cli-alpine
  stage: build
  tags:
    - docker
  only:
    - tags
  before_script:
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php composer-setup.php
    - php -r "unlink('composer-setup.php');"
    - mv composer.phar /usr/local/bin/composer
    - export RELEASE_VERSION=$(echo "${CI_COMMIT_TAG}" | sed 's/v//')
  script:
    - sed -i "s/\(<version>\)\( *\).*/\1\2${RELEASE_VERSION}<\/version>/" install.xml
    - cd upload/system/library/cdek_official
    - composer i -a
  artifacts:
    name: cdek-integration.ocmod
    paths:
      - upload
      - install.xml

build_custom:
  when: manual
  image: php:7.4-cli-alpine
  stage: build
  tags:
    - docker
  artifacts:
    name: cdek-integration.ocmod
    paths:
      - upload
      - install.xml
  before_script:
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    - php composer-setup.php
    - php -r "unlink('composer-setup.php');"
    - mv composer.phar /usr/local/bin/composer
    - export RELEASE_VERSION="${CI_COMMIT_REF_NAME}#${CI_COMMIT_SHORT_SHA}"
  script:
    - sed -i "s/\(<version>\)\( *\).*/\1\2${RELEASE_VERSION}<\/version>/" install.xml
    - cd upload/system/library/cdek_official
    - composer i -a

upload:
  stage: upload
  tags:
    - docker
  needs:
    - job: build_tag
      artifacts: true
  only:
    - tags
  before_script:
    - apk add curl zip
    - export RELEASE_VERSION=$(echo "${CI_COMMIT_TAG}" | sed 's/v//')
    - export ARCHIVE_VERSION=$(echo "${RELEASE_VERSION}" | sed 's/\./_/g')
  script:
    - zip -r cdek.zip upload install.xml
    - curl -u "${ARTIFACTORY_LOGIN}":"${ARTIFACTORY_PASS}" --upload-file cdek.zip "${ARTIFACTORY_REPO}/$CI_PROJECT_NAME/$CI_COMMIT_BRANCH/opencart_cdek_${ARCHIVE_VERSION}.ocmod.zip"

release:
  stage: deploy
  tags:
    - docker
  needs:
    - job: upload
  only:
    - tags
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  before_script:
    - export RELEASE_VERSION=$(echo "${CI_COMMIT_TAG}" | sed 's/v//')
    - export ARCHIVE_VERSION=$(echo "${RELEASE_VERSION}" | sed 's/\./_/g')
  script:
    - |
      release-cli create --name $CI_COMMIT_TAG --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"Архив\",\"filepath\":\"/archive\",
      \"url\":\"${ARTIFACTORY_REPO}$CI_COMMIT_BRANCH/$CI_PROJECT_NAME/opencart_cdek_${ARCHIVE_VERSION}.ocmod.zip\", 
      \"link_type\":\"package\"}" \
